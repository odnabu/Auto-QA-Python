# Skrebnev Fedor
# \033[0;__;__m \033[m   or   \033[1;__;__m \033[m
# print('#' * 115)      # Для разделения блоков на листе с кодом:
""" ################################################################################################################
 19.05.25
 Python - Auto QA 01:  INTRODUCTION.
 ################################################################################################################### """

# ------------------------ SHORTCUTS ------------------------
# Ctrl + W - выделить текущий блок. если нажимать это сочетание дальше, то будут выделяться родительские блоки.
# Ctrl+Y - Удаление всей строки. Кстати, команда копирования Ctrl+C без выделения также работает для всей строки.
# Ctrl+Akt+L / Alt+Enter - Привести код к принятым стандартам (для Python - PEP8).
# Ctrl+R — Изменить название класса/функции и т. п. по всему проекту.
# Ctrl+Shift + F - Найти по всем файлам.
# Shift + F6 - заменить имя элемента во всех частях во всех файлах.
# -----------------------------------------------------------

print('.' * 80)


""" ______  Task 1  ______________________________________________________________________________________________ """
# Создайте файл simple_math.py и напишите в нём следующий класс:

class SimpleMath:
    """ Класс с простыми математическими операциями."""

    def square(self, x):
        """ Возвращает квадрат числа."""
        return x * x

    def cube(self, x):
        """ Возвращает куб числа."""
        return x * x * x

# 1. Цель: Написать юнит-тесты для класса SimpleMath.
# 2. Инструкция:
#   ● Создайте файл test_simple_math.py.
#   ● Напишите в нём тесты для методов square и cube.
#   ● Проверьте корректность работы методов для разных входных значений (например, положительных, отрицательных и нуля).
# Пример ожидаемого поведения:
#   ● Метод square(2) должен возвращать 4.
#   ● Метод cube(-3) должен возвращать -27.
# В качестве ответа приложить ссылку на репозиторий в git.

# Запуск теста в консоли:
# pytest -v Homeworks/HW_01/HW01_19_05_test_simple_math.py


