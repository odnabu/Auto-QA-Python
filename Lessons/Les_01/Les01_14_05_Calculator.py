# Skrebnev Fedor
# \033[0;__;__m \033[m   or   \033[1;__;__m \033[m
# print('#' * 115)      # Для разделения блоков на листе с кодом:
""" ################################################################################################################
 14.05.25
 Python - Auto QA 01:  ____________.
 ################################################################################################################### """

# Video Lesson 01: ------------.
# Video Practice __: wasn't.
# links:
#   - Presentation:
#   - Облегчаем себе жизнь с помощью BeautifulSoup4: https://habr.com/ru/articles/544828/
#   - Устанавливаем python-пакеты с помощью pip: https://pythonworld.ru/osnovy/pip.html
#
# def input_numb_list():
#     numb_list = [int(x) for x in input('Enter a list of numbers separated by space: ').split()]
#     return numb_list
# ------------------------ SHORTCUTS ------------------------
# Ctrl + W - выделить текущий блок. если нажимать это сочетание дальше, то будут выделяться родительские блоки.
# Ctrl+Y - Удаление всей строки. Кстати, команда копирования Ctrl+C без выделения также работает для всей строки.
# Ctrl+Akt+L / Alt+Enter - Привести код к принятым стандартам (для Python - PEP8).
# Ctrl+R — Изменить название класса/функции и т. п. по всему проекту.
# Ctrl+Shift + F - Найти по всем файлам.
# Shift + F6 - заменить имя элемента во всех частях во всех файлах.
# -----------------------------------------------------------

print('.' * 120)

""" ___________________________________  Review of previously covered material  ___________________________________ """


""" ______  Task 1  ______________________________________________________________________________________________ """
# Разработка класса «Калькулятор»: создать класс «Калькулятор».
    # Сложение
    # Вычитание
    # Умножение
    # Деление
    # Возведение в степень
    # Нахождение среднего арифметического для переданных чисел


class Calculator:
    # def __init__(self, a, b):     # __ NB! __ Федор НЕ советует отображать __init__() в публичных API.
    #     self.a = a
    #     self.b = b

    def sum(self, a, b):
        return a + b

    def sub(self, a, b):
        return a - b

    def mul(self, a, b):
        return a * b

    def div(self, a, b):
        return a / b

    def pow(self, a, b=2):
        if b == 0:
            raise ZeroDivisionError('Cannot divide by zero.')
        else:
            return a ** b

    def avg(self, numbers):
        if len(numbers) == 0:
            return 0
        else:
            s = sum(numbers)
            return self.div(s, len(numbers))



""" %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%___________   ---   __________%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% """

""" __________ --- __________ """

""" __________ --- __________ """
#       ●
# ___ EXAMPLE __________________________________________________
# ___ END of Example __________________________________________________


""" ______  Task 1  ______________________________________________________________________________________________ """
#







